plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {    

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'
    // Use Google Guice for dependency injection.
    implementation 'com.google.inject:guice:5.1.0'
    // Use SLF4J for logging
    implementation 'org.slf4j:slf4j-api:2.0.4'    
    implementation 'org.slf4j:slf4j-simple:2.0.4'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    // Use Hamcrest for assertions and fluent testing
    testImplementation 'org.hamcrest:hamcrest:2.2'
    // Use Mockito for dynamic mocks
    testImplementation 'org.mockito:mockito-core:4.9.0'

}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}